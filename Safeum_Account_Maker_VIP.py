import marshal, zlib, base64

data = """"""

code = zlib.decompress(base64.b64decode(data))
exec(marshal.loads(code))
